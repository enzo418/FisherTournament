@using System.Text.RegularExpressions
@using FisherTournament.Contracts.Fishers
@using Application.Fishers.Commands.CreateFisher

@inject NavigationManager _nav
@inject ISender _sender
@inject NavigationHistory _history
@inject IMapper _mapper

@page "/fishers/add"

<h1 class="page-title">Agregar Pescador</h1>

<EditForm EditContext="@editContext" OnSubmit="@Submit" class="relative h-full">
    <div class="flex justify-center gap-20 pt-7">
        <div class="flex flex-col gap-10 justify-normal">
            <div>
                <span class="text-sm">Información Personal</span>
                <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation" />
            </div>

            <p>
                <FluentTextField @bind-Value="@Model.FirstName" Required="true">Nombre <span class="red">*</span>
                </FluentTextField>
                <ValidationMessage For="() => Model!.FirstName" />
            </p>

            <p>
                <FluentTextField @bind-Value="@Model.LastName" Required="true">Apellido <span class="red">*</span>
                </FluentTextField>
                <ValidationMessage For="() => Model!.LastName" />
            </p>
        </div>

        <div class="flex flex-col gap-10 justify-normal">
            <div>
                <span class="text-sm">Opcional</span>
                <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation" />
            </div>

            <p>
                <FluentTextField @bind-Value=date Required="false" Placeholder="01/12/1997"
                    Pattern="^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\d{4}$">
                    @* <FluentIcon Name="@FluentIcons.Calendar" Slot="start" Size="@IconSize.Size20"
                    Variant=IconVariant.Regular Color="Color.Neutral" /> *@
                    Fecha nacimiento
                </FluentTextField>
            <p class="error @dateValidationClasses">@dateValidationError</p>
            </p>
        </div>
    </div>

    <div class="absolute bottom-0 m-auto flex columns-2 gap-28 w-full place-content-center">
        <FluentButton Appearance="Appearance.Stealth" @onclick=OnCancel>Cancelar</FluentButton>
        <FluentButton Type=ButtonType.Submit Appearance="Appearance.Accent">Guardar</FluentButton>
    </div>
</EditForm>


@code {
    string? date = "";
    private EditContext? editContext;
    private ValidationMessageStore? messageStore;

    private CreateFisherRequest Model { get; set; } = null!;

    string dateValidationError = "";

    string dateValidationClasses = "hidden";

    protected override void OnInitialized()
    {
        Model ??= new("", "");
        editContext = new(Model);
        messageStore = new(editContext);
    }

    private void ValidateDateFormat(ChangeEventArgs e)
    {
        if (!DateTime.TryParseExact(e.Value?.ToString(), "dd/MM/yyyy", null, System.Globalization.DateTimeStyles.None, out
        _))
        {
            dateValidationError = "Formato de fecha inválido";
            dateValidationClasses = "";
        }
        else
        {
            dateValidationError = "";
            dateValidationClasses = "hidden";
        }
    }

    private void OnCancel()
    {
        _nav.NavigateTo(_history.LastOrHome());
    }

    private async Task Submit()
    {
        var response = _sender.Send(_mapper.Map<CreateFisherCommand>(Model));

        if (response.Result.IsError)
        {
            editContext?.AddValidationErrors(response.Result.Errors, messageStore, Model);
        }
        else
        {
            _nav.NavigateTo(_history.LastOrHome());
        }

        await Task.CompletedTask;
    }
}