@namespace FisherTournament.WebServer.Shared
@inject NavigationManager _nav

<div>
    <FluentToolbar style="height: 55px;width:100%;background-color: var(--neutral-layer-3)" class="shadow gap-x-5 flex justify-between">
            <FluentSkeleton Width="175px" Height="30px" Shimmer="true"></FluentSkeleton>

            @DividerTemplate

        <FluentNavMenu Style="width: fit-content !important; flex-direction: row;align-items: center !important;" Id="nav-page" Class="gap-x-1 w-fit flex items-center flex-row">
                <FluentNavLink Href="/tournaments" Icon="@(new Icons.Regular.Size20.Trophy())">Fechas y Torneos</FluentNavLink>

                @DividerTemplate

                <FluentNavLink Href="/fishers" Icon="@(new Icons.Regular.Size20.People())">Pescadores</FluentNavLink>

                @if (_nav.Uri.Contains("/notary"))
                {
                    @DividerTemplate

                    <FluentNavLink Href=@_nav.Uri Icon="@(new Icons.Regular.Size20.NotepadPerson())">Notario</FluentNavLink>
                }
            </FluentNavMenu>

            <span slot="end">
            <FluentSwitch @bind-Value="@IsInDarkMode" @bind-Value:after=OnToggleTheme title="Tema">
                    <span class="label">Tema</span>
                    <span slot="unchecked-message">
                        <FluentIcon class="align-middle" Icon="Icons.Regular.Size20.WeatherSunny" Color="Color.Neutral" />
                    </span>
                    <span slot="checked-message">
                        <FluentIcon class="align-middle" Icon="Icons.Regular.Size20.WeatherMoon" Color="Color.Neutral" />
                    </span>
                </FluentSwitch>
            </span>
    </FluentToolbar>
</div>

@code {
    private RenderFragment DividerTemplate = @<FluentDivider Style="height: 20px;" Class="mx-2" Role="DividerRole.Separator"
        Orientation="Orientation.Vertical">
        </FluentDivider>
    ;

    [Parameter]
    public Action OnToggleTheme { get; set; }

    [Parameter]
    public bool IsInDarkMode { get; set; } = false;

    private void NavigateToHome() => _nav.NavigateTo("/");
    private void NavigateToEvents() => _nav.NavigateTo("/events");
    private void NavigateToTournaments() => _nav.NavigateTo("/tournaments");
    private void NavigateToFishers() => _nav.NavigateTo("/fishers");

    private void OnPescadoresMenuChange(MenuChangeEventArgs arg)
    {
        @* Anchor doesn't work inside a FluentMenuItem 🤷 *@
        if (arg.Id is null) return;

        if (arg.Id == "fisher-add") _nav.NavigateTo("/fishers/add");
        else if (arg.Id == "fisher-search") _nav.NavigateTo("/fishers");
    }
}
