@namespace FisherTournament.WebServer.Shared
@inject NavigationManager _nav

<FluentToolbar style="height: 55px;width:100%;background-color: var(--neutral-layer-3)" class="shadow gap-x-3 flex justify-between">

    <FluentButton Appearance="Appearance.Outline" @onclick=NavigateToTournaments tabindex="2">
        <FluentIcon Icon="@Icons.Regular.Size20.Trophy" Slot="start" Color="Color.Neutral" /> Fechas y Torneos
    </FluentButton>

    @DividerTemplate

    <FluentButton Appearance="Appearance.Outline" @onclick=NavigateToFishers tabindex="1">
        <FluentIcon Icon="@Icons.Regular.Size20.People" Slot="start" Color="Color.Neutral" />
        Pescadores
    </FluentButton>

    @if (false)
    {
        @DividerTemplate

        <FluentButton tabindex="3" @onclick=NavigateToEvents>
            <FluentIcon Icon="@(Icons.Regular.Size20.Info)" Slot="start" Color="Color.Neutral" /> Eventos
        </FluentButton>
    }

    <span slot="end">
        <FluentSwitch Value="@IsInDarkMode" @onchange=OnToggleTheme title="Tema">
            <span class="label">Tema</span>
            <span slot="unchecked-message">
                <FluentIcon class="align-middle" Icon="Icons.Regular.Size20.WeatherSunny" Color="Color.Neutral" />
            </span>
            <span slot="checked-message">
                <FluentIcon class="align-middle" Icon="Icons.Regular.Size20.WeatherMoon" Color="Color.Neutral" />
            </span>
        </FluentSwitch>
    </span>

</FluentToolbar>

@code {
    private RenderFragment DividerTemplate = @<FluentDivider Style="height: 20px;" Role="DividerRole.Separator"
        Orientation="Orientation.Vertical">
    </FluentDivider>;

    [Parameter]
    public EventCallback OnToggleTheme { get; set; } = EventCallback.Empty;

    [Parameter]
    public bool IsInDarkMode { get; set; } = false;

    private void NavigateToHome() => _nav.NavigateTo("/");
    private void NavigateToEvents() => _nav.NavigateTo("/events");
    private void NavigateToTournaments() => _nav.NavigateTo("/tournaments");
    private void NavigateToFishers() => _nav.NavigateTo("/fishers");

    private void OnPescadoresMenuChange(MenuChangeEventArgs arg)
    {
        @* Anchor doesn't work inside a FluentMenuItem 🤷 *@
        if (arg.Id is null) return;

        if (arg.Id == "fisher-add") _nav.NavigateTo("/fishers/add");
        else if (arg.Id == "fisher-search") _nav.NavigateTo("/fishers");
    }
}
